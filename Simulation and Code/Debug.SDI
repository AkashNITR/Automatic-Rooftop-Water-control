,,,;====================================================================
,,,; Main.asm file generated by New Project wizard
,,,;
,,,; Created:   [Current Date]
,,,; Processor: AT89C52
,,,; Compiler:  ASEM-51 (Proteus)
,,,;====================================================================
,,,
,,,$NOMOD51
,,,$INCLUDE (80C52.MCU)
,,,;   80C52 processor definition file
,,,;   ===============================
,,,
,,,P0      DATA    080H
,,,SP      DATA    081H
,,,DPL     DATA    082H
,,,DPH     DATA    083H
,,,PCON    DATA    087H
,,,TCON    DATA    088H
,,,TMOD    DATA    089H
,,,TL0     DATA    08AH
,,,TL1     DATA    08BH
,,,TH0     DATA    08CH
,,,TH1     DATA    08DH
,,,P1      DATA    090H
,,,SCON    DATA    098H
,,,SBUF    DATA    099H
,,,P2      DATA    0A0H
,,,IE      DATA    0A8H
,,,SADDR   DATA    0A9H
,,,P3      DATA    0B0H
,,,IP      DATA    0B8H
,,,SADEN   DATA    0B9H
,,,T2CON   DATA    0C8H
,,,T2MOD   DATA    0C9H
,,,RCAP2L  DATA    0CAH
,,,RCAP2H  DATA    0CBH
,,,TL2     DATA    0CCH
,,,TH2     DATA    0CDH
,,,PSW     DATA    0D0H
,,,ACC     DATA    0E0H
,,,B       DATA    0F0H
,,,
,,,IT0     BIT     088H
,,,IE0     BIT     089H
,,,IT1     BIT     08AH
,,,IE1     BIT     08BH
,,,TR0     BIT     08CH
,,,TF0     BIT     08DH
,,,TR1     BIT     08EH
,,,TF1     BIT     08FH
,,,T2      BIT     090H
,,,T2EX    BIT     091H
,,,RI      BIT     098H
,,,TI      BIT     099H
,,,RB8     BIT     09AH
,,,TB8     BIT     09BH
,,,REN     BIT     09CH
,,,SM2     BIT     09DH
,,,SM1     BIT     09EH
,,,SM0     BIT     09FH
,,,EX0     BIT     0A8H
,,,ET0     BIT     0A9H
,,,EX1     BIT     0AAH
,,,ET1     BIT     0ABH
,,,ES      BIT     0ACH
,,,ET2     BIT     0ADH
,,,EA      BIT     0AFH
,,,RXD     BIT     0B0H
,,,TXD     BIT     0B1H
,,,INT0    BIT     0B2H
,,,INT1    BIT     0B3H
,,,T0      BIT     0B4H
,,,T1      BIT     0B5H
,,,WR      BIT     0B6H
,,,RD      BIT     0B7H
,,,PX0     BIT     0B8H
,,,PT0     BIT     0B9H
,,,PX1     BIT     0BAH
,,,PT1     BIT     0BBH
,,,PS      BIT     0BCH
,,,PT2     BIT     0BDH
,,,CPRL2   BIT     0C8H
,,,CT2     BIT     0C9H
,,,TR2     BIT     0CAH
,,,EXEN2   BIT     0CBH
,,,TCLK    BIT     0CCH
,,,RCLK    BIT     0CDH
,,,EXF2    BIT     0CEH
,,,TF2     BIT     0CFH
,,,P       BIT     0D0H
,,,OV      BIT     0D2H
,,,RS0     BIT     0D3H
,,,RS1     BIT     0D4H
,,,F0      BIT     0D5H
,,,AC      BIT     0D6H
,,,CY      BIT     0D7H
,,,
,,,RESET   CODE    000H
,,,EXTI0   CODE    003H
,,,TIMER0  CODE    00BH
,,,EXTI1   CODE    013H
,,,TIMER1  CODE    01BH
,,,SINT    CODE    023H
,,,TIMER2  CODE    02BH
,,,
,,,;====================================================================
,,,; DEFINITIONS
,,,;====================================================================
,,,
000B,,,TOP     equ P2.7      ; Input A
000B,,,BOTTOM  equ P2.6      ; Input B
000B,,,OUTPUT  equ P1.7      ; Output C
,,,
000B,,,RS equ P1.0    ; Command/Data
000B,,,RW equ P1.1    ; Read/Write
000B,,,EN equ P1.2    ; Latch enable
,,,
,,,
,,,;====================================================================
,,,; RESET and INTERRUPT VECTORS
,,,;====================================================================
,,,
,,,      ; Reset Vector
,,,      org   0000h
0000,02 00 03,,      jmp   Start
,,,
,,,;====================================================================
,,,; CODE SEGMENT
,,,;====================================================================
,,,
0003,C2 A7,Start,Start:  CLR TOP         ; Initially turn off P2.7
0005,C2 A6,,        CLR BOTTOM      ; Initially turn off P2.6
0007,C2 97,,        CLR OUTPUT      ; Initially turn off Motor
0009,74 38,,        mov A, #38h ;set up 2 line, 5x7 matrix display
000B,11 E7,,        Acall cmd
000D,74 0F,,        mov A, #0Fh ;Display ON, Cursor ON, Cursor blinking
000F,11 E7,,        Acall cmd
0011,74 01,,        mov A, #01h ;Clear the display
0013,11 E7,,        Acall cmd
0015,74 06,,        mov A, #06h ;Cursor increment mode(left to right)
0017,11 E7,,        Acall cmd
0019,74 80,,        mov A, #80h ;Cursor Home(line1, position1)
001B,11 E7,,        Acall cmd
,,,
,,,
,,,
001D,,MAIN_LOOP,MAIN_LOOP:
001D,20 A7 05,,      JB TOP, STOP           ; If A (P1.0) is 1, jump to STOP
0020,30 A6 08,,      JNB BOTTOM, RUN           ; If B (P1.1) is 0, jump to RUN
,,,
0023,80 F8,,      SJMP MAIN_LOOP       ; Continue looping
,,,
0025,,STOP,STOP:
0025,C2 97,,      CLR OUTPUT               ; Turn off Motor
0027,11 80,,      Acall Full
0029,80 F2,,      SJMP MAIN_LOOP       ; Return to main loop
,,,
002B,,RUN,RUN:
002B,D2 97,,      SETB OUTPUT        ; Turn on Motor
002D,11 31,,      Acall Loww
002F,80 EC,,      SJMP MAIN_LOOP       ; Return to main loop
,,,
0031,74 54,Loww,Loww:   mov A, #'T'
0033,11 F4,,        Acall disp
0035,74 41,,        mov A, #'A'
0037,11 F4,,        Acall disp
0039,74 4E,,        mov A, #'N'
003B,11 F4,,        Acall disp
003D,74 4B,,        mov A, #'K'
003F,11 F4,,        Acall disp
0041,74 20,,        mov A, #' '
0043,11 F4,,        Acall disp
0045,74 4C,,        mov A, #'L'
0047,11 F4,,        Acall disp
0049,74 4F,,        mov A, #'O'
004B,11 F4,,        Acall disp
004D,74 57,,        mov A, #'W'
004F,11 F4,,        Acall disp
,,,
,,,
,,,
0051,74 01,On,On:     mov A, #01h ;Clear the display
0053,11 E7,,        Acall cmd
0055,74 80,,        mov A, #80h ;Cursor Home(line1, position1)
0057,11 E7,,        Acall cmd
0059,74 4D,,        mov A, #'M'
005B,11 F4,,        Acall disp
005D,74 4F,,        mov A, #'O'
005F,11 F4,,        Acall disp
0061,74 54,,        mov A, #'T'
0063,11 F4,,        Acall disp
0065,74 4F,,        mov A, #'O'
0067,11 F4,,        Acall disp
0069,74 52,,        mov A, #'R'
006B,11 F4,,        Acall disp
006D,74 20,,        mov A, #' '
006F,11 F4,,        Acall disp
0071,74 4F,,        mov A, #'O'
0073,11 F4,,        Acall disp
0075,74 4E,,        mov A, #'N'
0077,11 F4,,        Acall disp
,,,
0079,30 A6 FD,loop,loop:   jnb BOTTOM, loop
007C,30 A7 FD,loop3,loop3:  jnb TOP, loop3
007F,22,,        ret
,,,
0080,74 01,Full,Full:   mov A, #01h ;Clear the display
0082,11 E7,,        Acall cmd
0084,74 80,,        mov A, #80h ;Cursor Home(line1, position1)
0086,11 E7,,        Acall cmd
0088,74 54,,        mov A, #'T'
008A,11 F4,,        Acall disp
008C,74 41,,        mov A, #'A'
008E,11 F4,,        Acall disp
0090,74 4E,,        mov A, #'N'
0092,11 F4,,        Acall disp
0094,74 4B,,        mov A, #'K'
0096,11 F4,,        Acall disp
0098,74 20,,        mov A, #' '
009A,11 F4,,        Acall disp
009C,74 46,,        mov A, #'F'
009E,11 F4,,        Acall disp
00A0,74 55,,        mov A, #'U'
00A2,11 F4,,        Acall disp
00A4,74 4C,,        mov A, #'L'
00A6,11 F4,,        Acall disp
00A8,74 4C,,        mov A, #'L'
00AA,11 F4,,        Acall disp
,,,
00AC,20 A7 FD,loop1,loop1:  jb TOP, loop1
,,,
00AF,74 01,Off,Off:    mov A, #01h ;Clear the display
00B1,11 E7,,        Acall cmd
00B3,74 80,,        mov A, #80h ;Cursor Home(line1, position1)
00B5,11 E7,,        Acall cmd
00B7,74 4D,,        mov A, #'M'
00B9,11 F4,,        Acall disp
00BB,74 4F,,        mov A, #'O'
00BD,11 F4,,        Acall disp
00BF,74 54,,        mov A, #'T'
00C1,11 F4,,        Acall disp
00C3,74 4F,,        mov A, #'O'
00C5,11 F4,,        Acall disp
00C7,74 52,,        mov A, #'R'
00C9,11 F4,,        Acall disp
00CB,74 20,,        mov A, #' '
00CD,11 F4,,        Acall disp
00CF,74 4F,,        mov A, #'O'
00D1,11 F4,,        Acall disp
00D3,74 46,,        mov A, #'F'
00D5,11 F4,,        Acall disp
00D7,74 46,,        mov A, #'F'
00D9,11 F4,,        Acall disp
,,,
00DB,20 A6 FD,loop2,loop2:  jb BOTTOM, loop2
00DE,74 01,,        mov A, #01h ;Clear the display
00E0,11 E7,,        Acall cmd
00E2,74 80,,        mov A, #80h ;Cursor Home(line1, position1)
00E4,11 E7,,        Acall cmd
00E6,22,,        ret
,,,
00E7,F5 B0,cmd,cmd:    mov P3,A
00E9,C2 90,,        clr RS ; command
00EB,C2 91,,        clr RW ; write command
00ED,D2 92,,        setb EN ; set latch enable
00EF,C2 92,,        clr EN ; clear latch enable
00F1,31 01,,        Acall delay
00F3,22,,        ret
,,,
00F4,F5 B0,disp,disp:   mov P3,A
00F6,D2 90,,        setb RS ;data
00F8,C2 91,,        clr RW ;write command
00FA,D2 92,,        setb EN ;set latch enable
00FC,C2 92,,        clr EN ;clear latch enable
00FE,31 01,,        Acall delay
0100,22,,        ret
,,,
0101,,delay,delay:
0101,79 FF,,    mov R1, #0FFH
0103,,delay1,delay1:
0103,7A FF,,    mov R2, #0FFh
0105,,delay2,delay2:
0105,DA FE,,    djnz R2, delay2
0107,D9 FA,,    djnz R1, delay1
0109,22,,    ret
,,,
,,,;====================================================================
000E,,,      END
,,,
,,,
